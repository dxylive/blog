<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>thump-thump</title>
  
  
  <link href="/myblog/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-04T07:08:07.110Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>春鱼未暖</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Integer和int区别</title>
    <link href="http://yoursite.com/2019/11/05/Integer%E5%92%8Cint%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2019/11/05/Integer和int区别/</id>
    <published>2019-11-05T06:04:47.780Z</published>
    <updated>2019-09-04T07:08:07.110Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本概念区分"><a href="#基本概念区分" class="headerlink" title="基本概念区分"></a>基本概念区分</h3><p>1.Integer是int的包装类型，int是java的一种基本数据类型</p><p>2.Integer必须实例化后才能使用，int变量不需要</p><p>3.Integer是实际是对象的引用，当new一个Integer时，实际上是生成一个指向此对象，而int则是直接存储数据值</p><p>4.Integer默认值是null，int默认值是0</p><h3 id="Integer、new-Integer-和-int-的比较"><a href="#Integer、new-Integer-和-int-的比较" class="headerlink" title="Integer、new Integer() 和 int 的比较"></a>Integer、new Integer() 和 int 的比较</h3><p>1.<strong>两个new Integer（）比较永远是false</strong></p><ul><li>因为new生成的是两个对象，其内存地址不同</li></ul><p>2.<strong>Integer变量 和 new Integer() 变量比较 ，永远为 false</strong></p><ul><li>因为 Integer变量 指向的是 java 常量池 中的对象， 而 new Integer() 的变量指向 堆中 新建的对象，两者在内存中的地址不同。</li></ul><p>3.<strong>两个Integer 变量比较，如果两个变量的值在区间-128到127 之间，则比较结果为true，如果两个变量的值不在此区间，则比较结果为 false 。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Integer i = <span class="number">100</span>;</span><br><span class="line">Integer j = <span class="number">100</span>;</span><br><span class="line">System.out.print(i == j); <span class="comment">//true</span></span><br><span class="line">Integer i = <span class="number">128</span>;</span><br><span class="line">Integer j = <span class="number">128</span>;</span><br><span class="line">System.out.print(i == j); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>分析：Integer i = 100 在编译时，会翻译成为 Integer i = Integer.valueOf(100)，而 java 对 Integer类型的 valueOf 的定义如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">   <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">   <span class="keyword">if</span>(i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)&#123;</span><br><span class="line">     <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>java对于-128到127之间的数，会进行缓存。所以 Integer i = 127 时，会将127进行缓存，下次再写Integer j = 127时，就会直接从缓存中取，就不会new了。</p><p>4.<strong>int 变量 与 Integer、 new Integer() 比较时，只要两个的值是相等，则为true 因为包装类Integer 和 基本数据类型int 比较时，java会自动拆包装为int ，然后进行比较，实际上就变为两个int变量的比较</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Integer i = <span class="keyword">new</span> Integer(<span class="number">100</span>); </span><br><span class="line"><span class="comment">//自动拆箱为 int i=100; 此时，相当于两个int的比较</span></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">100</span>；</span><br><span class="line">System.out.print(i == j); </span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本概念区分&quot;&gt;&lt;a href=&quot;#基本概念区分&quot; class=&quot;headerlink&quot; title=&quot;基本概念区分&quot;&gt;&lt;/a&gt;基本概念区分&lt;/h3&gt;&lt;p&gt;1.Integer是int的包装类型，int是java的一种基本数据类型&lt;/p&gt;
&lt;p&gt;2.Integer必
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
